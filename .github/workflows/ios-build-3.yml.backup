name: Build Ren'Py iOS App

on: push

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Ren'Py SDK
        id: cache-renpy
        uses: actions/cache@v3
        with:
          path: renpy
          key: renpy-8.3.7-${{ runner.os }}
          restore-keys: |
            renpy-8.3.7-

      - name: Download Ren'Py SDK
        if: steps.cache-renpy.outputs.cache-hit != 'true'
        run: |
          curl -o renpy-sdk.zip https://www.renpy.org/dl/8.3.7/renpy-8.3.7-sdk.zip
          unzip renpy-sdk.zip -d renpy

      - name: Download and install rapt
        if: steps.cache-renpy.outputs.cache-hit != 'true'
        run: |
          curl -o rapt.zip https://www.renpy.org/dl/8.3.7/renpy-8.3.7-rapt.zip
          unzip rapt.zip -d renpy/renpy-8.3.7-sdk

      - name: Download and install renios
        if: steps.cache-renpy.outputs.cache-hit != 'true'
        run: |
          curl -o renios.zip https://www.renpy.org/dl/8.3.7/renpy-8.3.7-renios.zip
          unzip renios.zip -d renpy/renpy-8.3.7-sdk

      - name: Download and install renpyweb
        if: steps.cache-renpy.outputs.cache-hit != 'true'
        run: |
          curl -o renpyweb.zip https://www.renpy.org/dl/8.3.7/renpy-8.3.7-web.zip
          unzip renpyweb.zip -d renpy/renpy-8.3.7-sdk

      - name: Build for iOS
        run: |
          cd renpy/renpy-8.3.7-sdk
          ./renpy.sh launcher ios_create "$GITHUB_WORKSPACE" ios
          ./renpy.sh launcher ios_populate "$GITHUB_WORKSPACE" ios

      - name: Build Xcode project
        run: |
          cd "$GITHUB_WORKSPACE/ios"
          xcodebuild -project renpy.xcodeproj -scheme renpy -configuration Release -sdk iphoneos

      - name: Create application Bundle and convert to .ipa
        run: |
          cd "$GITHUB_WORKSPACE/ios"
          BUILD_SETTINGS=$(xcodebuild -project renpy.xcodeproj -scheme renpy -configuration Release -sdk iphoneos -showBuildSettings)
          BUILT_PRODUCTS_DIR=$(echo "$BUILD_SETTINGS" | grep BUILT_PRODUCTS_DIR | cut -d '=' -f2 | xargs)
          FULL_PRODUCT_NAME=$(echo "$BUILD_SETTINGS" | grep FULL_PRODUCT_NAME | cut -d '=' -f2 | xargs)
          APP_PATH="$BUILT_PRODUCTS_DIR/$FULL_PRODUCT_NAME"
          IPA_NAME="Cockham Superheros.ipa"
          mkdir -p "$GITHUB_WORKSPACE/temp/Payload"
          cp -R "$APP_PATH" "$GITHUB_WORKSPACE/temp/Payload/"
          cd "$GITHUB_WORKSPACE/temp"
          zip -r --symlinks "$IPA_NAME" Payload/
          echo "IPA_PATH=$GITHUB_WORKSPACE/temp/$IPA_NAME" >> $GITHUB_ENV

      - name: Create release and upload asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ github.ref_name }}" "${{ env.IPA_PATH }}" \
            --title "Release ${{ github.ref_name }}" \
            --notes "Automated release"